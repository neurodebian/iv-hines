SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ../..

@SET_MAKE@

@CARBON_FALSE@@CYGWIN_FALSE@SUBDIRS = iclass idemo idraw 
@CYGWIN_TRUE@SUBDIRS = idemo
@CARBON_TRUE@SUBDIRS = idemo

subdir = .

ACLOCAL_M4 = $(top_srcdir)/aclocal.m4

mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES = 
DIST_SOURCES = 

DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$@ CONFIG_HEADERS= $(SHELL) ./config.status

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.

all install clean mostlyclean uninstall:
	@topdir=`pwd`; \
	for dir in $(SUBDIRS); do \
	  echo "Making $@ in $$dir"; \
	  cd $$dir; \
	  $(MAKE) $@; \
	  cd $$topdir; \
	done

distclean:
	@topdir=`pwd`; \
	for dir in $(SUBDIRS); do \
	  echo "Making $@ in $$dir"; \
	  cd $$dir; \
	  $(MAKE) $@; \
	  cd $$topdir; \
	done
	rm -f Makefile

.PHONY: all install clean mostlyclean distclean uninstall

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
